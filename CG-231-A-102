<!DOCTYPE html>
<html>
    <head>
        <title>Titulo</title>
        <style>
            html, body { margin: 0; padding: 0; overflow: hidden; }
            #text {
                position: absolute;
                padding: 10px;
                width: 100%;
                text-align: center;
                color: #4ac6d1;
            }
        </style>
    </head>
    <body>
        <div id="text">CUBO NATALIA<br/>
        </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r94/three.min.js"></script>
    <script>
        function cubo(lado, color){
         ( geometria-new THREE.Geometry);
        //Proceso de construccion del cubo
         var car1 =[[0,0,0],[0,lado,0],[lado,lado,0],[lado,0,0]]
         var car2 =[[0,lado, lado],[0,0,lado],[lado,0,lado],[lado,lado,lado]]
         var arist1 = [[0,lado,0],[0,lado,lado]]
         var arist2 = [[0,0,0],[0,0,lado]]
         var arist3 = [[lado,lado,0],[lado,lado,lado]]
         var arist4 = [[lado,0,0],[lado,0,0]]
         var arist5=
    }

    function init() {

        // Escena
        scene = new THREE.Scene();
        camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);    
        renderer = new THREE.WebGLRenderer();
        renderer.setClearColor(0x000000, 1.0);
        renderer.setSize(window.innerWidth, window.innerHeight);

        var size = 700;
        var arrowSize = 40;
        var divisions = 20;
        var origin = new THREE.Vector3( 0, 0, 0 );
        var x = new THREE.Vector3( 1, 0, 0 );
        var y = new THREE.Vector3( 0, 1, 0 );
        var z = new THREE.Vector3( 0, 0, 1 );
        var color2 = new THREE.Color( 0x333333 );  /// 0x333333
        var colorR = new THREE.Color( 0xAA0000 );
        var colorG = new THREE.Color( 0x00AA00 );
        var colorB = new THREE.Color( 0x0000AA );

        //Crear la Grilla
        var gridHelperXZ = new THREE.GridHelper( size, divisions, color2, color2);

        //Flechas
        var arrowX = new THREE.ArrowHelper( x, origin, arrowSize, colorR );
        var arrowY = new THREE.ArrowHelper( y, origin, arrowSize, colorG );
        var arrowZ = new THREE.ArrowHelper( z, origin, arrowSize, colorB );
			
        //C치mara
        camera.position.x = 000;
        camera.position.y = 100;
        camera.position.z = 400;
        camera.lookAt(scene.position);

        //Creaci칩n de las Figuras
        //Cuadrado
        Geometria=new THREE.Geometry();
        var vertices = [[0,0,0], [30,0,0], [30,30,0], [0,30,0], [0,0,0]];
        var largoVertice = vertices.length;
        for (i = 0; i < largoVertice; i++) {
            x = vertices[i][0];
            y = vertices[i][1];
            z = vertices[i][2];
            vector = new THREE.Vector3(x, y, z);
            Geometria.vertices.push(vector);
        }

        // Cuadrado Modificado
        Geometria2=new THREE.Geometry();
        var vertices = [[0,0,0], [30,0,0], [30,30,0], [0,30,0], [0,0,0]];
        var largoVertice = vertices.length;
        for (i = 0; i < largoVertice; i++){
            x = vertices[i][0];
            y = vertices[i][1];
            z = vertices[i][2];
            vector = new THREE.Vector3(x, y, z);
            Geometria2.vertices.push(vector);
        }

        // Colores
        Material=new THREE.ParticleBasicMaterial({color:0xFF0000});
        Material2=new THREE.ParticleBasicMaterial({color:0x00ff00});

        Cuadrado = new THREE.Line(Geometria,Material);
        Cuadrado2 = new THREE.Line(Geometria2,Material2); 

        // Matriz de Traslaci칩n
        var matrizT = new THREE.Matrix4();
        matrizT.set(1, 0, 0, 0,
                0, 1, 0, 0,
                0, 0, 1, 1,
                0, 0, 0, 1);

                Cuadrado2.applyMatrix(matrizT);         

        // Matriz de Escala
        var matrizS = new THREE.Matrix4();
        matrizS.set(5, 0, 0, 0,
                0, 1, 0, 0,
                0, 0, 1, 0,
                0, 0, 0, 1);

                Cuadrado2.applyMatrix(matrizS);

        // Matriz de Rotaci칩n
        var matrizR = new THREE.Matrix4();
        var alpha = 30;
		var cs = Math.cos(alpha);
		var ss = Math.sin(alpha);

		matrizR.set(cs,  0, ss, 0,
        		0, 1, 0, 0, 
				-ss, 0, cs, 0,
				0, 0, 0, 1);	

                Cuadrado2.applyMatrix(matrizR);

        // En el documento HTML
        document.body.appendChild(renderer.domElement);

        // Agregar elementos al escenario
        scene.add(gridHelperXZ);
	    scene.add(arrowX);	
		scene.add(arrowY);	
		scene.add(arrowZ);
        scene.add(Cuadrado);
        scene.add(Cuadrado2);
        scene.add(cubo);

        renderer.render(scene, camera);
    }

    init();  // otra forma: window.onload = init;

    </script>
  </body>
</html>
